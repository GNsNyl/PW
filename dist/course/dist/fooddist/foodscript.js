function App(){let e={el:"canvas",fov:75,cameraZ:-100,cameraX:800,cameraY:800,background:255},t,n,i,a,o,r,s,p,l,d,{randFloat:$,randFloatSpread:f}=THREE.Math,h,u,m,c,w,_=new THREE.Vector2,v=new THREE.Plane(new THREE.Vector3(0,0,1),0),M=new THREE.Vector3,y=new THREE.Raycaster,x=!1;function g(){s=(o=window.innerWidth)/2,p=(r=window.innerHeight)/2,t.setSize(o,r),i.aspect=o/r,i.updateProjectionMatrix();let n=function t(){let n=new THREE.PerspectiveCamera(i.fov,i.aspect),a=n.fov*Math.PI/180,o=2*Math.tan(a/2)*Math.abs(e.cameraZ),r=o*n.aspect;return[r,o]}();l=n[0],d=n[1]}(function s(){t=new THREE.WebGLRenderer({canvas:document.getElementById(e.el),antialias:!0}),(i=new THREE.PerspectiveCamera(e.fov)).position.z=e.cameraZ,i.position.x=e.cameraX,i.position.y=e.cameraY,g(),window.addEventListener("resize",g,!1),u=l,m=d,c=u*o/l,w=m*r/d,h=new RippleEffect(t,c,w);let p=function(e){let t=new THREE.Vector3;return i.getWorldDirection(t),t.normalize(),_.x=e.clientX/o*2-1,_.y=-(2*(e.clientY/r))+1,y.setFromCamera(_,i),y.ray.intersectPlane(v,M),{x:2*M.x/u,y:2*M.y/m}};t.domElement.addEventListener("mouseleave",e=>{x=!1}),t.domElement.addEventListener("mousemove",e=>{x=!0;let t=p(e);h.addDrop(t.x,t.y,.05,.1)}),t.domElement.addEventListener("mouseup",e=>{let t=p(e);h.addDrop(t.x,t.y,.1,-1.5)}),function o(){n=new THREE.Scene,e.background&&(n.background=new THREE.Color(e.background));let r=new THREE.MeshBasicMaterial({color:16777215,side:THREE.DoubleSide,onBeforeCompile(e){e.uniforms.hmap={value:h.hMap.texture},e.vertexShader="uniform sampler2D hmap;\n"+e.vertexShader;let t=`
          vec3 transformed = vec3(position);
          vec4 info = texture2D(hmap, uv);
          transformed.z = -20. * info.r;
        `;e.vertexShader=e.vertexShader.replace("#include <begin_vertex>",t)}}),s=.1,p=Math.round(c/5),l=Math.round(w/50),d=m/l;for(let $=0;$<=l;$++){let f=new THREE.PlaneBufferGeometry(u,s,p,1);f.translate(0,-m/2+$*d,0);let _=s/m,v=$/l,M=f.attributes.uv.array;for(let y=0;y<M.length;y+=2)M[y+1]=0==M[y+1]?v-_:v+_;n.add(new THREE.Mesh(f,r))}p=Math.round(c/50),l=Math.round(w/5);let x=u/p;for(let g=0;g<=p;g++){let D=new THREE.PlaneBufferGeometry(s,m,1,l);D.translate(-u/2+g*x,0,0);let P=s/u,B=g/p,S=D.attributes.uv.array;for(let z=0;z<S.length;z+=2)S[z]=0==S[z]?B-P:B+P;n.add(new THREE.Mesh(D,r))}i.position.set(0,-m/1.6,40),i.lookAt(new THREE.Vector3(0,-m/6,0)),(a=new THREE.OrbitControls(i,t.domElement)).enableDamping=!0,a.dampingFactor=.1,a.rotateSpeed=.5}(),function e(){if(!x){let a=.001*Date.now();h.addDrop(.4*Math.cos(a),.4*Math.sin(a),.05,-.05)}h.update(),t.render(n,i),requestAnimationFrame(e)}()})(),function e(){let t=new THREE.AmbientLight(16777215,1),i=new THREE.DirectionalLight(16777215,.5);i.position.z=100,t.position.z=50,n.add(t,i);var a=new THREE.TextureLoader;emojilist=["gout2.png","healthy3.png","highGI2.png","Hypertension2.png","healthy3.png","highGI2.png","Hypertension2.png"],emojipositionz=[0,30,45,-60],emojipositionx=[-30,30,0,60,120,-20,-90],emojipositiony=[60,-45,20,-75,30,0,60,45,];for(let o=0;o<20;o++){let r,s,p;s=new THREE.MeshBasicMaterial({map:a.load(emojilist[o])}),r=new THREE.SphereGeometry(5,32,15),(p=new THREE.Mesh(r,s)).position.x=emojipositionx[o],p.position.y=emojipositiony[o],p.rotation.y=-.5*Math.PI,n.add(p)}colorlist=[16776960,16776960,16776960,16776960],pancakepositionx=[40,75,-50,-90],pancakepositiony=[16,0,35,-50],pancakepositionz=[1,1,1,1],imagelist=["pancakes.jpeg","ramen.jpeg","banana.png","cucumber.jpeg"],plateradius=[15,20,25,45],distancelist=[55,25,30,25];for(let l=0;l<imagelist.length;l++){let d,$,f,h,u,m,c,w,_;d=new THREE.MeshStandardMaterial({map:a.load(imagelist[l])}),$=new THREE.CircleGeometry(.67*plateradius[l],25),(f=new THREE.Mesh($,d)).position.z=pancakepositionz[l]+1.1,f.position.x=pancakepositionx[l],f.position.y=pancakepositiony[l],h=new THREE.CylinderGeometry(plateradius[l],plateradius[l],2,32),u=new THREE.PointsMaterial({color:65280}),(m=new THREE.Points(h,u)).rotation.x=Math.PI/2,m.position.z=pancakepositionz[l],m.position.x=pancakepositionx[l],m.position.y=pancakepositiony[l],n.add(m,f),c=new THREE.ConeGeometry(.67*plateradius[l],distancelist[l]-1,3),w=new THREE.MeshStandardMaterial({color:65280,wireframe:!0}),(_=new THREE.Mesh(c,w)).position.z=pancakepositionz[l]+distancelist[l]/2,_.position.y=pancakepositiony[l],_.position.x=pancakepositionx[l],_.rotation.x=Math.PI/2,n.add(_)}let v=document.getElementById("video");v.src="o1_AdobeExpress1.mp4",v.load(),v.play();let M=document.getElementById("video2");M.src="v1.mp4",M.load(),M.play();let y=document.getElementById("video3");y.src="v2.mp4",y.load(),y.play();let x=new THREE.PlaneGeometry(12,15),g=new THREE.VideoTexture(v),D=new THREE.MeshBasicMaterial({map:g}),P=new THREE.Mesh(x,D),B=new THREE.MeshBasicMaterial({map:a.load("textbubble.png"),transparent:!0}),S=new THREE.PlaneGeometry(21,19),z=new THREE.Mesh(S,B);z.material.side=THREE.DoubleSide;let b=new THREE.MeshBasicMaterial({map:a.load("insta.png"),transparent:!0}),G=new THREE.PlaneGeometry(18,18),I=new THREE.Mesh(G,b);I.material.side=THREE.DoubleSide;let E=new THREE.MeshBasicMaterial({map:a.load("cef.png"),transparent:!0}),U=new THREE.PlaneGeometry(59.8,9.88),C=new THREE.Mesh(U,E),T=new THREE.MeshBasicMaterial({map:a.load("tex.png"),transparent:!0}),V=new THREE.PlaneGeometry(40,6),L=new THREE.Mesh(V,T),F=new THREE.MeshBasicMaterial({map:a.load("ml.png"),transparent:!0}),R=new THREE.PlaneGeometry(31.2,9.6),k=new THREE.Mesh(R,F);k.material.side=THREE.DoubleSide;let H=new THREE.MeshBasicMaterial({map:a.load("fd.png"),transparent:!0}),j=new THREE.PlaneGeometry(22,13),A=new THREE.Mesh(j,H);A.material.side=THREE.DoubleSide;let W=new THREE.MeshBasicMaterial({map:a.load("techback.png"),transparent:!0}),Q=new THREE.PlaneGeometry(20,22),X=new THREE.Mesh(Q,W);X.material.side=THREE.DoubleSide;let Y=new THREE.MeshBasicMaterial({map:a.load("yoloa.png"),transparent:!0}),Z=new THREE.PlaneGeometry(259.2,112.4),O=new THREE.Mesh(Z,Y),q=new THREE.MeshBasicMaterial({map:a.load("kinds.png"),transparent:!0}),J=new THREE.PlaneGeometry(63.2,72.4),K=new THREE.Mesh(J,q),N=new THREE.MeshBasicMaterial({map:a.load("user.png"),transparent:!0}),ee=new THREE.PlaneGeometry(50.2,16.4),et=new THREE.Mesh(ee,N),en=new THREE.VideoTexture(M),ei=new THREE.MeshBasicMaterial({map:en}),ea=new THREE.Mesh(x,ei),eo=new THREE.VideoTexture(y),er=new THREE.MeshBasicMaterial({map:eo}),es=new THREE.Mesh(x,er),ep=new THREE.MeshBasicMaterial({color:65535}),el=new THREE.BoxGeometry(15,18,1),ed=new THREE.Mesh(el,ep),e$=new THREE.Mesh(el,ep),ef=new THREE.Mesh(el,ep);z.position.z=pancakepositionz[0]+distancelist[0]-1.001,z.position.x=pancakepositionx[0]+15,z.position.y=pancakepositiony[0]+15,I.position.z=pancakepositionz[2]+distancelist[2]-1.001,I.position.x=pancakepositionx[2]+15,I.position.y=pancakepositiony[2]+15,C.position.z=0,C.position.x=45,C.position.y=-55,C.rotation.z=.15*Math.PI,L.position.z=0,L.position.x=-25,L.position.y=15,L.rotation.z=0,k.position.z=0,k.position.x=25,k.position.y=55,k.rotation.z=-.1*Math.PI,A.position.z=0,A.position.x=-75,A.position.y=-15,A.rotation.z=-.2*Math.PI,X.position.z=0,X.position.x=45,X.position.y=65,X.rotation.z=-.2*Math.PI,O.position.z=-1,O.position.x=0,O.position.y=0,O.rotation.y=Math.PI,K.position.z=0,K.position.x=-20,K.position.y=-40,et.position.z=0,et.position.x=-100,et.position.y=40,ed.position.z=pancakepositionz[0]+distancelist[0]-1.001,ed.position.x=pancakepositionx[0],ed.position.y=pancakepositiony[0],P.position.z=pancakepositionz[0]+distancelist[0],P.position.x=pancakepositionx[0],P.position.y=pancakepositiony[0],e$.position.z=pancakepositionz[1]+distancelist[1]-1.01,e$.position.x=pancakepositionx[1],e$.position.y=pancakepositiony[1],ef.position.z=pancakepositionz[2]+distancelist[2]-1.01,ef.position.x=pancakepositionx[2],ef.position.y=pancakepositiony[2],ea.position.z=pancakepositionz[1]+distancelist[1],ea.position.x=pancakepositionx[1],ea.position.y=pancakepositiony[1],es.position.z=pancakepositionz[2]+distancelist[2],es.position.x=pancakepositionx[2],es.position.y=pancakepositiony[2],n.add(et,K,O,X,A,k,L,C,I,z,ed,P,e$,ea,ef,es)}()}const RippleEffect=function(){function e(e,n,i){this.renderer=e,this.width=512,this.height=512,this.delta=new THREE.Vector2(this.width/Math.pow(n,2),this.height/Math.pow(i,2)),this.hMap=new THREE.WebGLRenderTarget(this.width,this.height,{type:THREE.HalfFloatType,depthBuffer:!1,stencilBuffer:!1}),this.hMap1=new THREE.WebGLRenderTarget(this.width,this.height,{type:THREE.HalfFloatType,depthBuffer:!1,stencilBuffer:!1}),this.fsQuad=new t,this.initShaders()}e.prototype.initShaders=function(){let e=`
      varying vec2 vUv;
      void main() {
        vUv = uv;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
      }
    `;this.copyMat=new THREE.ShaderMaterial({uniforms:{tDiffuse:{value:null}},vertexShader:e,fragmentShader:`
        uniform sampler2D tDiffuse;
        varying vec2 vUv;
        void main() {
          gl_FragColor = texture2D(tDiffuse, vUv);
        }
      `}),this.updateMat=new THREE.ShaderMaterial({uniforms:{tDiffuse:{value:null},delta:new THREE.Uniform(this.delta)},vertexShader:e,fragmentShader:`
        uniform sampler2D tDiffuse;
        uniform vec2 delta;
        varying vec2 vUv;
        void main() {
          vec4 texel = texture2D(tDiffuse, vUv);

          vec2 dx = vec2(delta.x, 0.0);
          vec2 dy = vec2(0.0, delta.y);
          float average = (
            texture2D(tDiffuse, vUv - dx).r +
            texture2D(tDiffuse, vUv - dy).r +
            texture2D(tDiffuse, vUv + dx).r +
            texture2D(tDiffuse, vUv + dy).r
          ) * 0.25;
          texel.g += (average - texel.r) * 2.0;
          texel.g *= 0.995;
          texel.r += texel.g;

          gl_FragColor = texel;
        }
      `}),this.dropMat=new THREE.ShaderMaterial({uniforms:{tDiffuse:{value:null},center:new THREE.Uniform(new THREE.Vector2),radius:{value:.05},strength:{value:.5}},vertexShader:e,fragmentShader:`
        const float PI = 3.1415926535897932384626433832795;
        uniform sampler2D tDiffuse;
        uniform vec2 center;
        uniform float radius;
        uniform float strength;
        varying vec2 vUv;
        void main() {
          vec4 texel = texture2D(tDiffuse, vUv);
          float drop = max(0.0, 1.0 - length(center * 0.5 + 0.5 - vUv) / radius);
          drop = 0.5 - cos(drop * PI) * 0.5;
          texel.r += drop * strength;
          // texel.r = clamp(texel.r, -2.0, 2.0);
          gl_FragColor = texel;
        }
      `})},e.prototype.update=function(){this.updateHMap()},e.prototype.updateHMap=function(){this.updateMat.uniforms.tDiffuse.value=this.hMap.texture,this.renderShaderMat(this.updateMat,this.hMap1),this.swapBuffers()},e.prototype.addDrop=function(e,t,n,i){this.dropMat.uniforms.tDiffuse.value=this.hMap.texture,this.dropMat.uniforms.center.value.set(e,t),this.dropMat.uniforms.radius.value=n,this.dropMat.uniforms.strength.value=i,this.renderShaderMat(this.dropMat,this.hMap1),this.swapBuffers()},e.prototype.renderBuffer=function(e,t){t=t||null,this.copyMat.uniforms.tDiffuse.value=e.texture,this.renderShaderMat(this.copyMat,t)},e.prototype.renderShaderMat=function(e,t){this.fsQuad.material=e;let n=this.renderer.getRenderTarget();this.renderer.setRenderTarget(t),this.fsQuad.render(this.renderer),this.renderer.setRenderTarget(n)},e.prototype.swapBuffers=function(){let e=this.hMap;this.hMap=this.hMap1,this.hMap1=e};let t=function(){let e=new THREE.OrthographicCamera(-1,1,1,-1,0,1),t=new THREE.PlaneBufferGeometry(2,2),n=function(e){this._mesh=new THREE.Mesh(t,e)};return Object.defineProperty(n.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(n.prototype,{render:function(t){t.render(this._mesh,e)}}),n}();return e}();App();